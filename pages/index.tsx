import Head from "next/head";
import Header from "./components/header";
import { useEffect, useState } from "react";

type Obj = {
  id: null | undefined;
  title: String;
  content: String;
};

export default function Home() {
  const [values, setValues] = useState({ title: "", content: "" });
  const [itemList, setItemList] = useState<Obj[]>([]);

  const getList = () => {
    fetch("../api/hello", {
      method: "GET",
    })
      .then((res) => res.json())
      .then((data) => {
        console.log(data);
        setItemList(data);
        console.log(itemList);
      });
  };

  useEffect(() => {
    getList();
  }, []);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const val = e.target.value;
    const name = e.target.name;
    setValues({ ...values, [name]: val });
  };

  const handlePost = async () => {
    const data = {
      title: values.title,
      content: values.content,
    };
    await fetch("../api/hello", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    })
      .then((res) => res.json())
      .then((data) => {
        alert("投稿しました");
        console.log(data);
      });
    setValues({ title: "", content: "" });
    getList();
  };

  const handleDelete = async (id: null | undefined) => {
    const delId = {
      id: id,
    };
    console.log(delId);
    await fetch("../api/delete", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(delId),
    }).then((res) => console.log(res));
    getList();
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className={``}>
        <div>
          <input
            type="text"
            onChange={handleChange}
            value={values.title}
            name="title"
          />
          <input
            type="text"
            onChange={handleChange}
            value={values.content}
            name="content"
          />
          <button onClick={handlePost}>追加</button>
        </div>

        {itemList.map((item) => {
          return (
            <div key={item.id}>
              <div>
                {item.title}+{item.content}
              </div>
              <button onClick={() => handleDelete(item.id)}>削除</button>
            </div>
          );
        })}
      </main>
    </>
  );
}
